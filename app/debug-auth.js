const { chromium } = require('playwright');

(async () => {
  console.log('üîç Debugging Authentication Flow...\n');
  
  const browser = await chromium.launch({ 
    headless: false,
    slowMo: 1000
  });
  const context = await browser.newContext();
  const page = await context.newPage();

  // Enable console logging
  page.on('console', msg => {
    if (msg.type() === 'error') {
      console.log('‚ùå Browser Error:', msg.text());
    }
  });

  try {
    // Clear all cookies and storage first
    console.log('1Ô∏è‚É£ Clearing browser state...');
    await context.clearCookies();
    
    // Go to sign-in page
    console.log('2Ô∏è‚É£ Going to sign-in page...');
    await page.goto('http://localhost:3000/auth/signin');
    await page.waitForLoadState('networkidle');
    
    // Take screenshot
    await page.screenshot({ path: 'debug-signin-page.png' });
    console.log('‚úÖ Sign-in page loaded');
    
    // Check what happens when clicking the button
    console.log('3Ô∏è‚É£ Checking Google OAuth button...');
    const googleButton = page.locator('text=Sign in with Google').first();
    
    if (await googleButton.isVisible()) {
      console.log('‚úÖ Google button found');
      
      // Check the URL the button will redirect to
      const buttonHref = await googleButton.getAttribute('onclick');
      console.log('üîó Button action:', buttonHref);
      
      console.log('\nüñ±Ô∏è  I can see the button is there. The issue seems to be with the OAuth flow.');
      console.log('\nüìã Let me check the current session state...');
      
      // Check session state
      await page.goto('http://localhost:3000/api/auth/session');
      await page.waitForLoadState('networkidle');
      const sessionText = await page.textContent('body');
      console.log('üîê Current session:', sessionText);
      
      await page.screenshot({ path: 'debug-session-state.png' });
      
    } else {
      console.log('‚ùå Google button not found');
    }
    
    console.log('\nüéØ The authentication is failing at the OAuth callback level.');
    console.log('   This suggests the Google OAuth credentials or configuration needs adjustment.');

  } catch (error) {
    console.error('‚ùå Debug error:', error.message);
  } finally {
    console.log('\n‚è∞ Keeping browser open for 30 seconds for manual inspection...');
    await page.waitForTimeout(30000);
    await browser.close();
  }
})();